Method Overriding:
    When same method exist in parent and child class.
Why we should care about method overriding:
    Same method can behave differently on different objects. It allows us to achieve Polymorphism
What is the syntax to achieve method overriding:
    Redefine the method with same header inside the child class
    Parent parent = new Child()// polymorphism
Rules:
    1) There should be inheritance between classes
    2) Method header should be same(access modifier+return type+method name+parameters)
    3) We can't override the private methods because private methods don't participate in inheritance
    4) Constructors can't be overridden because they also don't participate in inheritance
    5) We can only increase the visibility of a method inside the child class but we can't decrease it
    for example if a method is declared protected or default we can change it to public, but we can't
    do the reverse.
    6) We don't say we override the static method we say we have declare the static method
    7) Methods that are declared with the final keyword can't be overridden
    =================================================================================================
Final keyword:
    Final in Java represent completeness. If something is complete and does not
    need any modification the we use final keyword with entity
When final is used with properties:
    1) When final is used with properties/fields/instance variable we cannot reassign those variables
    2) When used with methods these methods can't be overridden in child classes
    3) When using with class names no other class can inherit from that class
    ================================================================================================
Abstraction:
    Is hiding the implementation details and only showing the functionality
Why we should use Abstraction:
    With the help og Abstraction we can reduce the complexity of the code by only
    focusing on the input/output of a method instead of focusing on the logic of that method.
What is the syntax for abstraction:
    Whenever we have to create abstract methods we don't provide the implementation/body of the method
    we only provide the header of the method and we use the abstract keyword
Rules:
    1) Abstract method can't have body
    2) Abstract classes can have abstract and non abstract method
    3) Abstract classes can't be instantiated (Can't create the object of that class)
    4) Abstract classes can't be declared final
    5) We use abstract keyword for abstract classes and methods
    6) We  use abstract child class has to implement the method or we can declare the
    child class as abstract too
======================================================================================================
Interfaces:
    Are contracts that classes implement. We can also achieve abstraction with interfaces
Why we should use Interfaces:
    1) THey allow multiple inheritance
    2) They don't have the issue of tightly coupled code
    (we change something in parent class change all in child classes too)
Syntax to use Interfaces:
    interface nameOfInterface{
    }
Rules:
    1) All variables in interfaces are public static final
    2) No instance variables
    3) No constructors also are not allowed
    4) By default methods are public and abstract
    5) A single class can implement many interfaces
    6) An interface can extend another interface